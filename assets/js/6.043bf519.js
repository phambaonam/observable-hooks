(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{217:function(t,s,a){t.exports=a.p+"assets/img/observable-hooks.bbca1b76.png"},231:function(t,s,a){"use strict";a.r(s);var e=a(31),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"core-concepts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#core-concepts"}},[t._v("#")]),t._v(" Core Concepts")]),t._v(" "),e("h2",{attrs:{id:"tl-dr"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tl-dr"}},[t._v("#")]),t._v(" TL;DR")]),t._v(" "),e("p",[e("img",{attrs:{src:a(217),alt:"observable-hooks concepts"}})]),t._v(" "),e("h2",{attrs:{id:"producer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#producer"}},[t._v("#")]),t._v(" Producer")]),t._v(" "),e("p",[t._v("Producers produce normal values. Normal values can be converted into Observables via many different helpers which use "),e("code",[t._v("observable.next")]),t._v(" under the hood.")]),t._v(" "),e("h3",{attrs:{id:"useobservable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#useobservable"}},[t._v("#")]),t._v(" useObservable")]),t._v(" "),e("p",[t._v("In the context of React Function Component, changes of props, states and any variable can be captured with the "),e("code",[t._v("useEffect")]),t._v(" hook. This makes it a valid Producer.")]),t._v(" "),e("p",[t._v("Observable Hooks offers "),e("RouterLink",{attrs:{to:"/api/#useobservable"}},[e("code",[t._v("useObservable")])]),t._v(" to convert these values into Observables.")],1),t._v(" "),e("h3",{attrs:{id:"useobservablecallback"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#useobservablecallback"}},[t._v("#")]),t._v(" useObservableCallback")]),t._v(" "),e("p",[t._v("Another way to produce values is via callbacks. Whether it is data fetching or DOM event, anything inside React Components that accepts function callbacks can be converted into Observables with "),e("RouterLink",{attrs:{to:"/api/#useobservablecallback"}},[e("code",[t._v("useObservableCallback")])]),t._v(".")],1),t._v(" "),e("h2",{attrs:{id:"observable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#observable"}},[t._v("#")]),t._v(" Observable")]),t._v(" "),e("p",[t._v("React Function Components can be called many times untill they are unmounted.")]),t._v(" "),e("p",[t._v("Observable manipulations should be performed inside the first function argument of "),e("a",{attrs:{href:"#useobservable"}},[e("code",[t._v("useObservable")])]),t._v(", "),e("a",{attrs:{href:"#useobservablecallback"}},[e("code",[t._v("useObservableCallback")])]),t._v(" or "),e("a",{attrs:{href:"#useobservablestate"}},[e("code",[t._v("useObservableState")])]),t._v(" which is called only once and always returns the same Observable.")]),t._v(" "),e("p",[t._v("Since the function arugment is called only once it is not safe to directly reference other variables in closure.")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("onChange"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" textChange$"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("useObservableCallback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event$")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" event$"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          text"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentTarget"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          flag"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" props"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flag "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// always the initial value")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("You should convert it into Observable and use "),e("code",[t._v("withLatestFrom")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" flag$ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("useObservable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pluckFirst"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("props"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("onChange"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" textChange$"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("useObservableCallback")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event$")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" event$"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("withLatestFrom")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag$"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" flag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          text"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentTarget"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          flag\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("If you already have multiple Observables and want to do something with them together, use "),e("RouterLink",{attrs:{to:"/api/#useobservable"}},[e("code",[t._v("useObservable")])]),t._v(" but without dependencies.")],1),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" enhanced$ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("useObservable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("combineAll")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stream1$"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stream2$"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"observer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#observer"}},[t._v("#")]),t._v(" Observer")]),t._v(" "),e("p",[t._v("Observers consume values emitted from Observables and perform side effects.")]),t._v(" "),e("h3",{attrs:{id:"usesubscription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usesubscription"}},[t._v("#")]),t._v(" useSubscription")]),t._v(" "),e("p",[t._v("Instead of manually subscribe Observables, use "),e("RouterLink",{attrs:{to:"/api/#usesubscription"}},[e("code",[t._v("useSubscription")])]),t._v(" which will auto-unsubscribe on unmount. You can also reference closure variables directly inside callback. "),e("RouterLink",{attrs:{to:"/api/#usesubscription"}},[e("code",[t._v("useSubscription")])]),t._v(" will ensure the latest callback is called.")],1),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("debug"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setDebug"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" subscription "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("useSubscription")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("events$"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("debug"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("Reference props directly:")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" subscription "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("useSubscription")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("events$"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" props"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onChange"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"useobservablestate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#useobservablestate"}},[t._v("#")]),t._v(" useObservableState")]),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/api/#useobservablestate"}},[e("code",[t._v("useObservableState")])]),t._v(" is a sugar of "),e("a",{attrs:{href:"#useobservable"}},[e("code",[t._v("useObservable")])]),t._v(" + "),e("a",{attrs:{href:"#usesubscription"}},[e("code",[t._v("useSubscription")])]),t._v(" + "),e("code",[t._v("useState")]),t._v(" to get states from Observables. Unlike directly setting state on subscription, "),e("RouterLink",{attrs:{to:"/api/#useobservablestate"}},[e("code",[t._v("useObservableState")])]),t._v(" will skip any initial sync re-rendering.")],1),t._v(" "),e("h2",{attrs:{id:"helpers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#helpers"}},[t._v("#")]),t._v(" Helpers")]),t._v(" "),e("p",[t._v("You may alreay notice that the first function argument of "),e("a",{attrs:{href:"#useobservable"}},[e("code",[t._v("useObservable")])]),t._v(", "),e("a",{attrs:{href:"#useobservablecallback"}},[e("code",[t._v("useObservableCallback")])]),t._v(" and "),e("a",{attrs:{href:"#useobservablestate"}},[e("code",[t._v("useObservableState")])]),t._v(" is pure. This makes it highly testable and reuseable. In fact, Observable Hooks offers a few common "),e("RouterLink",{attrs:{to:"/api/helpers.html"}},[t._v("helpers")]),t._v(" to reduce garbage collection.")],1)])}),[],!1,null,null,null);s.default=n.exports}}]);